#	makefile for network demo programs and network entrez
#	Microsoft C large model under DOS [ "nmake MSC=1" ]
#	Microsoft C large model under Windows (requires Windows SDK)
#		[ "nmake MSW=1" ]
#	Borland C/C++ large model under DOS [ "make -DBOR" ]
#   Borland C/C++ large model under MSWindows [ "make -DBWN" ]
#   
#   Microsoft C medium model uses the -AM flag instead of -AL,
#       and the mlibcew library instead of llibcew
#   Borland C/C++ medium model uses the -mm flag instead of -ml,
#       the C0Wm library instead of C0Wl, CWm instead of CWl,
#       and mathwm (or mathm) instead of mathwl (or mathl)
#   
#   (The /30 flag in rc is only if you are using the Borland (3.0)
#   compiler with the Microsoft (3.1) rc.)
#
#   Note:  Both the Borland and Microsoft commands below make DOS versions
#   that overlay code.  This greatly reduces the memory requirements
#   of the executable.
#   

# flags for compiling and loading

# Microsoft C under MSDOS
!ifdef MSC
GOTONE = 1
SUFFIXLCL = msc
SUFFIXENV = dos
CC = cl
!ifdef DBUG
DFLAGS = -Od -Zi -D_DEBUG
LFLAGS = /NOE /NOD /ONERROR:NOEXE /CO
!else
DFLAGS = -Os
LFLAGS = /NOE /NOD /ONERROR:NOEXE
!endif
CFLAGS1 = -c -AL -G2s -Gt128 -W3 $(DFLAGS)
LDFLAGS1 = -AL -G2s -Gt128 -W3 -F 1000 -Fm $(DFLAGS)
!endif

# Microsoft C under MS Windows
!ifdef MSW
GOTONE = 1
MSWINDOWS = 1
SUFFIXLCL = msw
SUFFIXENV = msw
CC = cl
!ifdef DBUG
DFLAGS = -Od -Zi -D_DEBUG
LFLAGS = /NOE /NOD /ONERROR:NOEXE /CO
!else
DFLAGS = -Oselg
LFLAGS = /NOE /NOD /ONERROR:NOEXE
!endif
CFLAGS1 = -c -AL -G2s -GA -Gt128 -W3 $(DFLAGS)
LDFLAGS1 = -AL -G2s -GA -Gt128 -W3 $(DFLAGS)
guilibs= commdlg llibcew libw oldnames
!endif

# Borland C++
!ifdef BOR
GOTONE = 1
BORLAND = 1
SUFFIXLCL = bor
SUFFIXENV = dos
CC = bcc
CFLAGS1 = -c -ml -2 -O -Yo
LDFLAGS1 = -ml -2 -O
!endif

# Borland C++ under MS Windows
!ifdef BWN
GOTONE = 1
BORLAND = 1
MSWINDOWS = 1
SUFFIXLCL = bwn
SUFFIXENV = msw
CC = bcc
CFLAGS1 = -c -ml -2 -O -W -D_WINDOWS
LDFLAGS1 = -ml -2 -O -W -D_WINDOWS
!endif

!ifndef GOTONE
!error PLATFORM NOT DEFINED!! [ MSC, MSW, BOR, BWN ]
!endif

!if "$(NET)" == ""
!error NETWORK INTERFACE NOT DEFINED! NET MUST BE ONE OF [ PCNFS, NEWT, WSOCK ]
!endif

ASNDIR = asnload
LIB1 = ncbi.lib
LIB2 = ncbiobj.lib
LIB3 = ncbicdr.lib
LIB4 = vibrant.lib
LIB5 = ncbiacc.lib
LIB6 = netcli.lib
LIB7 = netentr.lib
LIB8 = ncbinacc.lib
LIB9 = ncbicacc.lib
# LIB10 is reserved for ncsasock
LIB10 =
INCPATH = ..\include

!if "$(NET)" == "PCNFS"
CFLAGS1 = $(CFLAGS1) -I..\network\pcnfs\include -DNETP_INET_PCNFS
INCLUDE = $(INCLUDE);..\network\pcnfs\include
NETLIBS = tklibw
HAVENET = 1
!endif
!if "$(NET)" == "NEWT"
CFLAGS1 = $(CFLAGS1) -DNETP_INET_NEWT
NETLIBS = nmpcip
HAVENET = 1
!endif
!if "$(NET)" == "WSOCK"
CFLAGS1 = $(CFLAGS1) -I..\network\winsock -DNETP_INET_WSOCK
INCLUDE = $(INCLUDE);..\network\winsock
NETLIBS = winsock
HAVENET = 1
!endif

!ifndef HAVENET
!error NETWORK INTERFACE IMPROPERLY DEFINED! NET MUST BE ONE OF [ PCNFS, NEWT, WSOCK ]
!endif

LIBPATH = ..\lib
CFLAGS = $(CFLAGS1) -I$(INCPATH)
LDFLAGS = $(LDFLAGS1) -I$(INCPATH)

##
## some things to make
##
# sources needed for versions of demo programs

OBJENT =	avail.obj browser.obj chosen.obj fetch.obj report.obj

EXE1 = nentrez.exe centrez.exe vclient.exe netentcf.exe

OBJ6 = ni_msg.obj ni_lib.obj ni_error.obj ni_list.obj ni_encrs.obj

OBJ7 = netentr.obj netlib.obj objneten.obj

OBJ8 = naccentr.obj accutils.obj

OBJ9 = caccentr.obj accutils.obj

## All things to make
##
all : copy nocopy
!ifdef MSWINDOWS
nocopy : $(LIB6) $(LIB7) $(LIB8) $(LIB9) $(EXE1)
!else
nocopy :
!endif

## To clean out the directory without removing make
##
clean :
	del *.c
	del *.h
	del *.obj
	del *.lib
	del *.rsp
	del *.def
	del *.rc

## get all the source files
##

copy :
!ifndef NC
!ifdef MSWINDOWS
	copy ..\browser\*.* .
	copy ..\demo\entrezcf.c .
	copy ..\network\entrez\client\*.h ..\include
	copy ..\network\entrez\client\*.c .
	copy ..\network\nsclilib\*.h ..\include
	copy ..\network\nsclilib\*.c .
	copy ..\network\nsdemocl\*.* .
	copy ..\network\netmanag\*.h ..\include
!if "$(NET)" == "PCNFS"
!ifdef BORLAND
	copy ..\network\pcnfs\borlib\*.lib .
	copy ..\network\pcnfs\borlib\*.lib ..\lib
!else
	copy ..\network\pcnfs\msclib\*.lib .
	copy ..\network\pcnfs\msclib\*.lib ..\lib
!endif
	copy ..\link\pcnfs\*.* .
!endif
!if "$(NET)" == "NEWT"
	copy ..\network\netmanag\*.lib ..\lib
	copy ..\network\netmanag\*.lib .
	copy ..\link\netmanag\*.* .
!endif
!if "$(NET)" == "WSOCK"
	copy ..\network\winsock\*.lib ..\lib
	copy ..\network\winsock\*.lib .
	copy ..\link\winsock\*.* .
!endif
!endif
!endif
!ifdef NC
	echo no copy
!endif

## Implicit actions
##

.c.obj:
	$(CC) $(CFLAGS) $*.c

## special rules for network-only and network-plus-CD versions of acclib
##
naccentr.obj: accentr.c
	copy accentr.c naccentr.c
	$(CC) $(CFLAGS) -D_NETENT_ naccentr.c

caccentr.obj: accentr.c
	copy accentr.c caccentr.c
	$(CC) $(CFLAGS) -D_NET_AND_CD_ caccentr.c

## make libraries
##
$(LIB6) : $(OBJ6)
	del $(LIB6)
!ifdef BORLAND
	tlib $(LIB6) /C /E @..\make\libnserv.bor
!else
	lib /PAGESIZE:128 @<<
$@
y
$(OBJ6)
;
<<
!endif
	copy $(LIB6) ..\lib

$(LIB7) : $(OBJ7)
	del $(LIB7)
!ifdef BORLAND
	tlib $(LIB7) /C /E @..\make\libneten.bor
!else
	lib /PAGESIZE:128 @<<
$@
y
$(OBJ7)
;
<<
!endif
	copy $(LIB7) ..\lib

$(LIB8) : $(OBJ8)
	del $(LIB8)
!ifdef BORLAND
	tlib $(LIB8) /C /E @..\make\libnacc.bor
!else
	lib /PAGESIZE:128 @<<
$@
y
$(OBJ8)
;
<<
!endif
	copy $(LIB8) ..\lib

$(LIB9) : $(OBJ9)
	del $(LIB9)
!ifdef BORLAND
	tlib $(LIB9) /C /E @..\make\libcacc.bor
!else
	lib /PAGESIZE:128 @<<
$@
y
$(OBJ9)
;
<<
!endif
	copy $(LIB9) ..\lib


# Network entrez

!ifdef MSWINDOWS
nentrez.res : nentrez.rc ncbilogo.ico
    rc -r -I..\include nentrez.rc

nentrez.exe : $(OBJENT) nentrez.res
!ifdef BORLAND
	tlink  @nentrez.rsp
	rc /30 nentrez.res nentrez.exe
!else
	link  @<<
$(OBJENT)
nentrez/align:16/seg:150
nentrez/map
$(LFLAGS) $(LIB4) $(LIB8) $(LIB3) $(LIB7) $(LIB2) $(LIB6) $(LIB1) $(NETLIBS) $(guilibs)
nentrez.def
<<
	rc -K nentrez.res nentrez.exe
!endif

!endif

# Network + CD ("combo") entrez

!ifdef MSWINDOWS
centrez.res : centrez.rc ncbilogo.ico
    rc -r -I..\include centrez.rc

centrez.exe : $(OBJENT) centrez.res
!ifdef BORLAND
	tlink  @centrez.rsp
	rc /30 centrez.res centrez.exe
!else
	link  @<<
$(OBJENT)
centrez/align:16/seg:150
centrez/map
$(LFLAGS) $(LIB4) $(LIB9) $(LIB3) $(LIB7) $(LIB2) $(LIB6) $(LIB1) $(NETLIBS) $(guilibs)
centrez.def
<<
	rc -K centrez.res centrez.exe
!endif

!endif

# sample network services client (Vibrant)
!ifdef MSWINDOWS
vclient.obj : vclient.c
	$(CC) $(CFLAGS) vclient.c

vclient.res : vclient.rc
	rc -r -I..\include vclient.rc

vclient.exe : vclient.obj vclient.res
!ifdef BORLAND
	tlink @vclient.rsp
	rc -K /30 vclient.res vclient.exe
!else
	link  @<<
vclient.obj
vclient/align:16
vclient/map
$(LFLAGS) $(LIB4) $(LIB6) $(LIB1) $(NETLIBS) $(guilibs)
vclient.def
<<
	rc -K vclient.res vclient.exe
!endif

!endif


# Network Entrez configuration program

!ifdef MSWINDOWS
netentcf.obj : entrezcf.c
	copy entrezcf.c netentcf.c
	$(CC) $(CFLAGS) -DNETWORK_SUPPORTED netentcf.c

netentcf.res : netentcf.rc
	rc -r -I..\include netentcf.rc

netentcf.exe : netentcf.obj netentcf.res
!ifdef BORLAND
	tlink @netentcf.rsp
	rc -K /30 netentcf.res netentcf.exe
!else
	link  @<<
netentcf.obj
netentcf/align:16/seg:150
netentcf/map
$(LFLAGS) $(LIB4) $(LIB8) $(LIB3) $(LIB7) $(LIB2) $(LIB6) $(LIB1) $(NETLIBS) $(guilibs)
netentcf.def
<<
	rc -K netentcf.res netentcf.exe
!endif
!endif
